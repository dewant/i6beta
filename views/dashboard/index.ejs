<a class="weatherwidget-io" href="https://forecast7.com/en/n7d70109d02/cilacap/" data-label_1="CILACAP" data-label_2="WEATHER"
  data-theme="original">WEATHER</a>
<script>
  !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = "https://weatherwidget.io/js/widget.min.js"; fjs.parentNode.insertBefore(js, fjs); } }(document, "script", "weatherwidget-io-js");
</script>
<br></br>
<div class="row">
  <div class="col-md-5">
    <div class="card">
      <div class="card-body">
        <canvas id="myChart"></canvas>
        <script>
          var ctx = document.getElementById("myChart").getContext('2d');
          var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
              labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
              datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                  'rgba(255, 99, 132, 0.2)',
                  'rgba(54, 162, 235, 0.2)',
                  'rgba(255, 206, 86, 0.2)',
                  'rgba(75, 192, 192, 0.2)',
                  'rgba(153, 102, 255, 0.2)',
                  'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                  'rgba(255,99,132,1)',
                  'rgba(54, 162, 235, 1)',
                  'rgba(255, 206, 86, 1)',
                  'rgba(75, 192, 192, 1)',
                  'rgba(153, 102, 255, 1)',
                  'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
              }]
            },
            options: {
              scales: {
                yAxes: [{
                  ticks: {
                    beginAtZero: true
                  }
                }]
              }
            }
          });
        </script>
      </div>
    </div>

    <div class="card">
      <div class="card-body">

        <head>
          <title>Bar Chart</title>
          <script src="../../../dist/Chart.bundle.js"></script>
          <script src="../../utils.js"></script>
          <style>
          </style>
        </head>

        <body>
          <div id="container" style="width: 75%;">
            <canvas id="canvas"></canvas>
          </div>
          <script>
            var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
            var color = Chart.helpers.color;
            var barChartData = {
              labels: ["January", "February", "March", "April", "May", "June", "July"],
              datasets: [{
                label: 'Dataset 1',
                backgroundColor: color(window.chartColors.red).alpha(0.5).rgbString(),
                borderColor: window.chartColors.red,
                borderWidth: 1,
                data: [
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor()
                ]
              }, {
                label: 'Dataset 2',
                backgroundColor: color(window.chartColors.blue).alpha(0.5).rgbString(),
                borderColor: window.chartColors.blue,
                borderWidth: 1,
                data: [
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor(),
                  randomScalingFactor()
                ]
              }]
            };
            window.onload = function () {
              var ctx = document.getElementById("canvas").getContext("2d");
              window.myBar = new Chart(ctx, {
                type: 'bar',
                data: barChartData,
                options: {
                  responsive: true,
                  legend: {
                    position: 'top',
                  },
                  title: {
                    display: true,
                    text: 'Chart.js Bar Chart'
                  }
                }
              });
            };
            document.getElementById('randomizeData').addEventListener('click', function () {
              var zero = Math.random() < 0.2 ? true : false;
              barChartData.datasets.forEach(function (dataset) {
                dataset.data = dataset.data.map(function () {
                  return zero ? 0.0 : randomScalingFactor();
                });
              });
              window.myBar.update();
            });
            var colorNames = Object.keys(window.chartColors);
            document.getElementById('addDataset').addEventListener('click', function () {
              var colorName = colorNames[barChartData.datasets.length % colorNames.length];;
              var dsColor = window.chartColors[colorName];
              var newDataset = {
                label: 'Dataset ' + barChartData.datasets.length,
                backgroundColor: color(dsColor).alpha(0.5).rgbString(),
                borderColor: dsColor,
                borderWidth: 1,
                data: []
              };
              for (var index = 0; index < barChartData.labels.length; ++index) {
                newDataset.data.push(randomScalingFactor());
              }
              barChartData.datasets.push(newDataset);
              window.myBar.update();
            });
            document.getElementById('addData').addEventListener('click', function () {
              if (barChartData.datasets.length > 0) {
                var month = MONTHS[barChartData.labels.length % MONTHS.length];
                barChartData.labels.push(month);
                for (var index = 0; index < barChartData.datasets.length; ++index) {
                  //window.myBar.addData(randomScalingFactor(), index);
                  barChartData.datasets[index].data.push(randomScalingFactor());
                }
                window.myBar.update();
              }
            });
            document.getElementById('removeDataset').addEventListener('click', function () {
              barChartData.datasets.splice(0, 1);
              window.myBar.update();
            });
            document.getElementById('removeData').addEventListener('click', function () {
              barChartData.labels.splice(-1, 1); // remove the label first
              barChartData.datasets.forEach(function (dataset, datasetIndex) {
                dataset.data.pop();
              });
              window.myBar.update();
            });
          </script>
        </body>
      </div>
    </div>
  </div>


  <div class="col-md-7">
    <div class="card">
      <div class="card-header">
        <i class="icon-check"></i>Data PLC
        <ul class="nav nav-tabs float-right" role="tablist">
          <li class="nav-item">
            <a tab="" class="nav-link active" data-toggle="tab" href="#hsrg1" role="tab">HSRG 1</a>
          </li>
          <li class="nav-item">
            <a tab="" class="nav-link" data-toggle="tab" href="#hsrg2" role="tab">HSRG 2</a>
          </li>
        </ul>
      </div>
      <div class="card-body p-0">
        <div class="tab-content">
          <div class="tab-pane active" id="hsrg1">
            <table class="table table-hover table-align-middle mb-0">
              <thead>
                <tr>
                  <th>Gas</th>
                  <th>Data</th>
                  <th>Presentase</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>CO</td>
                  <td><i class="fa fa-exclamation" v-if="tags.hrsg1.CO.quality=='BAD'"></i>{{tags.hrsg1.CO.value}}</td>
                  <td>{{tags.hrsg1.CO.persen}}%</td>
                </tr>
                <tr>
                  <td>CO2</td>
                  <td>{{tags.hrsg1.CO2.value}}%</td>
                  <td>{{tags.hrsg1.CO2.persen}}%</td>
                </tr>
                <tr>
                  <td>FLOW</td>
                  <td>{{tags.hrsg1.FLOW.value }}</td>
                  <td>{{tags.hrsg1.FLOW.persen.toFixed(2)}}%</td>
                  </td>
                </tr>
                <tr>
                  <td>NOX</td>
                  <td>{{tags.hrsg1.NOX.value }}</td>
                  <td>{{tags.hrsg1.NOX.persen }}</td>
                </tr>
                <tr>
                  <td>O2</td>
                  <td>{{tags.hrsg1.O2.value }}</td>
                  <td>{{tags.hrsg1.CO.persen}}</td>
                </tr>
                <tr>
                  <td>OPACITY</td>
                  <td>{{tags.hrsg1.OPACITY.value }}</td>
                  <td> <div class="progress progress-sm my-2">
                    <div class="progress-bar bg-info" aria-valuenow="{{tags.hrsg1.CO.value }}" aria-valuemin="0" aria-valuemax="100">
                      {{tags.hrsg1.CO.value}}</div>
                  </div>
                </td>
                </tr>
                <tr>
                  <td>DUST</td>
                  <td>{{tags.hrsg1.DUST.value}}</td>
                  <td>
                    <div class="progress progress-sm my-2">
                      <div class="progress-bar bg-info" aria-valuenow="{{tags.hrsg1.CO.value }}" aria-valuemin="0" aria-valuemax="100">
                        {{tags.hrsg1.CO.value}}</div>
                    </div>
                  </td>
                </tr>
                <tr>
                  <td>SO2</td>
                  <td>{{tags.hrsg1.SO2.value}}</td>
                  <td>
                    <div class="progress progress-sm my-2">
                      <div class="progress-bar bg-info" aria-valuenow="{{tags.hrsg1.CO.value }}" aria-valuemin="0" aria-valuemax="100">
                        {{tags.hrsg1.CO.value}}</div>
                    </div>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
          <div class="tab-pane" id="hsrg2">
            <table class="table table-hover mb-0">
              <thead>
                <tr>
                  <th>Gas</th>
                  <th>Data</th>
                  <th>Presentase</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>CO</td>
                  <td>{{tags.hrsg2.CO.value}}</td>
                </tr>
                <tr>
                  <td>CO2</td>
                  <td>{{tags.hrsg2.CO2.value }}</td>
                  <td></td>
                </tr>
                <tr>
                  <td>FLOW</td>
                  <td>{{tags.hrsg2.FLOW.value }}</td>
                  <td></td>
                </tr>
                <tr>
                  <td>NOX</td>
                  <td>{{tags.hrsg2.NOX.value }}</td>
                  <td></td>
                </tr>
                <tr>
                  <td>O2</td>
                  <td>{{tags.hrsg2.O2.value }}</td>
                  <td></td>
                </tr>
                <tr>
                  <td>OPACITY</td>
                  <td>{{tags.hrsg2.OPACITY.value }}</td>
                  <td></td>
                </tr>
                <tr>
                  <td>DUST</td>
                  <td>{{tags.hrsg2.DUST.value }}</td>
                  <td></td>
                </tr>
                <tr>
                  <td>SO2</td>
                  <td>{{tags.hrsg2.SO2.value }}</td>
                  <td></td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>